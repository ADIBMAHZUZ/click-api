# Generated by Django 3.0.4 on 2020-05-09 00:10

import click.media.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('master_data', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('duration', models.CharField(max_length=50, null=True)),
                ('author', models.CharField(max_length=100, null=True)),
                ('encrypt_key', models.CharField(max_length=100, null=True)),
                ('format_type', models.CharField(max_length=50, null=True)),
                ('media_type', models.CharField(choices=[('book', 'Book'), ('audio', 'Audio'), ('video', 'Video')], max_length=10, null=True)),
                ('number_of_download', models.IntegerField(default=0)),
                ('file_size', models.IntegerField(null=True)),
                ('url', models.FileField(max_length=500, null=True, upload_to=click.media.models.media_file_directory_path)),
                ('preview_url', models.FileField(max_length=500, null=True, upload_to=click.media.models.media_preview_directory_path)),
                ('max_preview', models.IntegerField(default=5)),
                ('thumbnail', models.ImageField(null=True, upload_to='')),
                ('encrypt_info', models.CharField(max_length=500, null=True)),
                ('name_encrypt', models.CharField(max_length=500, null=True)),
                ('name_backup', models.CharField(max_length=500, null=True)),
                ('published_date', models.DateField(null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master_data.Category')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'media_media',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SubscriberMediaTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('action', models.CharField(choices=[('borrow', 'Borrow'), ('return', 'Return'), ('extend', 'Extend')], max_length=100)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='media.Media')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'media_subscriber_media_transaction',
            },
        ),
        migrations.CreateModel(
            name='SubscriberMediaFavorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='media.Media')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'media_subscriber_media_favorite',
            },
        ),
        migrations.CreateModel(
            name='SubscriberMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('max_download', models.IntegerField()),
                ('expiration_time', models.DateField()),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriber_media_media', to='media.Media')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'media_subscriber_media',
            },
        ),
        migrations.CreateModel(
            name='MediaImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to=click.media.models.media_images_directory_path)),
                ('thumbnail', models.ImageField(null=True, upload_to='')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='media.Media')),
            ],
            options={
                'db_table': 'media_media_image',
            },
        ),
        migrations.CreateModel(
            name='LibraryMediaTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('quantity', models.IntegerField()),
                ('status', models.CharField(choices=[('approve', 'Approve'), ('waiting', 'Waiting'), ('reject', 'Reject')], max_length=50)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Library')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='media.Media')),
            ],
            options={
                'db_table': 'media_library_media_transaction',
            },
        ),
        migrations.CreateModel(
            name='LibraryMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('quantity', models.IntegerField()),
                ('number_of_download', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Library')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='library_media', to='media.Media')),
            ],
            options={
                'db_table': 'media_library_media',
            },
        ),
    ]
